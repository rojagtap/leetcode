/*
[]
[],[1]
[],[1],[2],[1,2]
[],[1],[2],[1,2],[2,2],[1,2,2] 
only add to the subsets generated by the last element if there is a duplicate
for this, keep track of where the last one ended (prev subsetsize), this will be the current start
*/

class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int subsetsize = 0;
        vector<vector<int>> subsets = {{}};
        for (int i = 0; i < nums.size(); ++i) {
            int j = i > 0 && nums[i] == nums[i - 1] ? subsetsize : 0;
            subsetsize = subsets.size();
            for (; j < subsetsize; ++j) {
                vector<int> subsetj (subsets[j].begin(), subsets[j].end());
                subsetj.push_back(nums[i]);
                subsets.push_back(subsetj);
            }
        }
        
        return subsets;
    }
};